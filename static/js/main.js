"use strict";
console.log("Start!");
let speed = 48; //px/second todo move to user or physics?
let speed_input = document.getElementById("speed");
speed_input.addEventListener("input", (ev) => {
    speed = speed_input.value;
});
let canvas = document.getElementById('main');
let context = canvas.getContext('2d');
let keys = new Keyboard();
let mouse = new Mouse(canvas);
let camera = new Camera(context, new Hitbox(new Point({ x: 1, y: 1 }), canvas.width, canvas.height));
let timerTick;
let timerDraw;
let currentWorld;
function start(world) {
    try {
        clearInterval(timerDraw);
        clearInterval(timerTick);
    }
    catch (e) {
        console.log(e);
    }
    currentWorld = world;
    world.setCamera(camera);
    let user = world.user;
    let textures = [
        user.avatar.texture,
        new FillRectangleTexture(new Color(255, 255, 255, 12)),
        new AnimatedFillRectangleTexture(new Color(255, 255, 255, 12)),
        new StrokeRectangleTexture(new Color(126, 63, 32)),
        new ImageTexture("duck16x16.png")
    ];
    let tick = (dt) => {
        let step = 100;
        let dv = new Point({});
        if (keys.down) {
            dv.y += step;
        }
        if (keys.up) {
            dv.y -= step;
        }
        if (keys.right) {
            dv.x += step;
        }
        if (keys.left) {
            dv.x -= step;
        }
        camera.scale(mouse.whell / 1551);
        user.body.setAcceleration(dv);
        if (keys.clone) {
            world.pushDrawable(new Entity(new CompositeAvatar(textures[getRandomInt(0, textures.length - 1)]), world.physics.createBody(new Hitbox(user.hitbox.position.Sum(new Point({ x: 50, y: 0 })), 33, 33), new Point({}), true)));
            keys.clone = false;
        }
        world.tick(dt / 1000);
    };
    let prev_time = Date.now();
    timerTick = setInterval(() => {
        let time = Date.now();
        tick(time - prev_time);
        prev_time = time;
    });
    timerDraw = setInterval(world.draw.bind(world), 15);
}
loadWorld("test-world-anim.json", start);
let sb = document.getElementById("save");
let lb = document.getElementById("load");
let saveInput = document.getElementById("saveNum");
sb.onclick = () => {
    if (currentWorld)
        saveLocal(saveInput.value, currentWorld);
    sb.blur();
    canvas.focus();
};
lb.onclick = () => {
    start(loadLocal(saveInput.value));
    lb.blur();
    canvas.focus();
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tYWluLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFBO0FBRXJCLElBQUksS0FBSyxHQUFHLEVBQUUsQ0FBQyxDQUFDLHlDQUF5QztBQUN6RCxJQUFJLFdBQVcsR0FBRyxRQUFRLENBQUMsY0FBYyxDQUFDLE9BQU8sQ0FBcUIsQ0FBQztBQUN2RSxXQUFXLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDekMsS0FBSyxHQUFHLFdBQVcsQ0FBQyxLQUEwQixDQUFBO0FBQ2xELENBQUMsQ0FBQyxDQUFBO0FBRUYsSUFBSSxNQUFNLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQXNCLENBQUM7QUFDbEUsSUFBSSxPQUFPLEdBQUcsTUFBTSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQTZCLENBQUM7QUFDbEUsSUFBSSxJQUFJLEdBQUcsSUFBSSxRQUFRLEVBQUUsQ0FBQztBQUMxQixJQUFJLEtBQUssR0FBRyxJQUFJLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQTtBQUM3QixJQUFJLE1BQU0sR0FBRyxJQUFJLE1BQU0sQ0FBQyxPQUFPLEVBQUUsSUFBSSxNQUFNLENBQUMsSUFBSSxLQUFLLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFFLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUE7QUFDaEcsSUFBSSxTQUFpQixDQUFDO0FBQ3RCLElBQUksU0FBaUIsQ0FBQztBQUN0QixJQUFJLFlBQW1CLENBQUM7QUFDeEIsU0FBUyxLQUFLLENBQUMsS0FBWTtJQUN2QixJQUFJO1FBQ0EsYUFBYSxDQUFDLFNBQVMsQ0FBQyxDQUFBO1FBQ3hCLGFBQWEsQ0FBQyxTQUFTLENB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